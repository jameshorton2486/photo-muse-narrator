
import type { DescriptionPayload } from '@/types/product';

export interface ProductDescription {
  title: string;
  details: {
    category: string;
    originPeriod: string;
    age: string;
    materials: string;
    dimensions: string;
    condition: string;
    itemNumber: string;
    price: string;
  };
  description: string[];
  distinguishingCharacteristics: string[];
  conditionReport: string;
  provenanceHistory: string;
  collectorValue: string;
  additionalDetails: string;
  shippingHandling: string;
}

export async function generateDescription(payload: DescriptionPayload): Promise<ProductDescription> {
  // For now, return placeholder data until we connect to Claude
  // This structure matches our expected AI output format
  return {
    title: payload.formData.title,
    details: {
      category: payload.formData.category,
      originPeriod: payload.formData.era,
      age: payload.formData.era,
      materials: payload.formData.materials,
      dimensions: `${payload.formData.dimensions.height}″ × ${payload.formData.dimensions.width}″ × ${payload.formData.dimensions.depth}″`,
      condition: "Good",
      itemNumber: payload.formData.itemNumber,
      price: payload.formData.price
    },
    description: [
      "Processing item description...",
      "Additional details will be generated by AI."
    ],
    distinguishingCharacteristics: [
      "Feature 1 will be AI generated",
      "Feature 2 will be AI generated",
      "Feature 3 will be AI generated",
      "Feature 4 will be AI generated",
      "Feature 5 will be AI generated"
    ],
    conditionReport: "Condition report will be generated by AI",
    provenanceHistory: "History will be generated by AI",
    collectorValue: "Value assessment will be generated by AI",
    additionalDetails: "Additional details will be generated by AI",
    shippingHandling: "Standard shipping and handling procedures apply"
  };
}
